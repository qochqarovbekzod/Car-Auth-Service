definitions:
  auth.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  auth.RegistrRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      role:
        type: string
    type: object
  auth.RegistrResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      role:
        type: string
      updated_at:
        type: string
    type: object
  auth.TokenResponce:
    properties:
      acces_token:
        type: string
      expires_in:
        type: integer
      refresh_token:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample server for Auth Service.
  title: Auth Service API
  version: "1.0"
paths:
  /auth/login:
    post:
      parameters:
      - description: email and password
        in: body
        name: LoginRequest
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Failed request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Login user
      tags:
      - Auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Log out a user by invalidating their refresh token and clearing
        cookies
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: string
        "400":
          description: Invalid token or Error while finding user
          schema:
            type: string
      summary: Log out a user
      tags:
      - Authentication
  /auth/refreshtoken:
    post:
      consumes:
      - application/json
      description: Refresh the user's access and refresh tokens using the refresh
        token from cookies
      parameters:
      - description: Access Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.TokenResponce'
        "400":
          description: Error while getting refresh token, Invalid token, or Error
            while refreshing
          schema:
            type: string
      summary: Refresh user tokens
      tags:
      - Authentication
  /auth/register:
    post:
      description: Create new user
      parameters:
      - description: User info
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/auth.RegistrRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.RegistrResponse'
        "400":
          description: Invalid data
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Register user
      tags:
      - Auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
